#
# lomet.conf -- sample configuration file for the lomet program
#
# This file serves as a reference for the different settings that can be
# tweaked for different parts of the lomet Robolocust metrics log
# analysis program. It is not meant to be edited and used on a regular
# basis as it is checked into the svn repository and we wouldn't want
# that file to be constantly updated (e.g., after some experimental knob
# twiddling).
#
# To play around with various settings, it would be better to copy this
# file to ~/.lometrc and edit that instead.
#
# The syntax of this file closely matches that of INI files often found
# on the Windows platform. Briefly, here are the sytax rules:
#
#     1. Blank lines and comments are ignored.
#
#     2. Only single-line comments are supported.
#
#     3. Comments are started by a '#' or ';' character.
#
#     4. Comments must appear on lines by themselves (i.e., config lines
#        cannot have comments in them).
#
#     5. Config lines can be either section names or key-value
#        assignments.
#
#     6. Section names must start with a letter and may be
#        followed by letters, numbers or the underscore character.
#
#     7. Section names have to be enclosed in square brackets, i.e., '['
#        and ']'.
#
#     8. The key name in a key-value assignment follow the
#        same rules as section names (except that they should not be
#        enclosed in square brackets).
#
#     9. The key name must be followed by an equals sign (which may be
#        surrounded by optional whitespace).
#
#    10. The value must follow the equals sign in a key-value assignment
#        statement.
#
#    11. All tokens following the equals sign (disregarding optional
#        trailing whitespace after the equals sign) comprise the value
#        portion of the key-value statement.
#
#    12. Long key-value statements may be broken up across multiple
#        lines and continued from one line to the next by ending each
#        line with a '\' character. Note that the '\' must be the last
#        character on the line, i.e., it should be immediately followed
#        by a newline and no other trailing whitespace should appear
#        between the '\' and the newline.
#
#        All initial whitespace on the following line will be discarded.
#        Thus, to break up a really long string across multiple lines,
#        don't have any whitespace between the '\' at the end of lines
#        and the immediately preceding character. However, to ensure
#        that tokens on the following lines are considered separate, put
#        some intervening whitespace between the '\' and the previous
#        character.
#
#        The '\' line continuation characters themselves are not part of
#        the value portion of key-value statements.
#
#    13. The value portion of a key-value statement is taken verbatim,
#        i.e., there is no notion of quoting strings and/or escape
#        sequences; the whitespace following the equals sign is ignored
#        and then all characters up to the end of the line are taken as
#        the value corresponding to the specified key.
#
# Simplifying the above legalese: to get things right, just follow the
# pattern laid out in this file. Straying from the above rules and the
# syntax illustrated in this file will probably lead to errors (usually
# of the worst kind, i.e., silent assumptions of weird intent). The code
# that parses this file is mostly just a quick-and-dirty hack and has
# not been tested extensively to iron out all possible bugs. So try not
# to push the envelope here; the basic config file syntax rules are more
# than adequate for most purposes.
#
##########################################################################
#                                                                        #
#     WARNING!     WARNING!     WARNING!     WARNING!     WARNING!       #
#                                                                        #
# Furthermore, do not assume that there is extensive range checking,     #
# validation and other sanity checks on the values/settings specified in #
# here. Thus, for example, if a setting needs to be a number between     #
# zero and one, supply a number between zero and one. Otherwise, expect  #
# Bad Things to happen!                                                  #
#                                                                        #
##########################################################################
#

# Primary maintainer for this file: mviswana usc edu
# $HeadURL: svn://isvn.usc.edu/software/invt/trunk/saliency/src/Robots/LoBot/config/lomet.conf $
# $Id: lomet.conf 14284 2010-12-01 15:49:20Z mviswana $

#--------------------------- GLOBAL SETTINGS ----------------------------

# The lomet program expects to be passed a list of directories on the
# command line. Each directory is assumed to contain a dataset
# consisting of 25 (or more) metrics log files collected from
# experiments conducted to gauge the performance of an LGMD-based
# obstacle avoidance algorithm in a local navigation task.
#
# The program reads the metlogs in these directories, parses them to
# extract the relevant info and performs the necessary analysis that
# highlights the algorithm's average-case behaviour. Since the
# directories may well contain files other than the metlogs, the
# analysis program needs some way to figure out which ones to load.
#
# This setting specifies a regular expression that matches the names of
# all the metrics logs.
log_file_name = (metlog-[[:digit:]]{8}-[[:digit:]]{6})$

# Once we have analyzed the log files stored in a directory, the results
# will be written to a file in that directory. This setting specifies
# the name of the results file.
#
# By default, the result file is named "result". Thus, if lomet is
# invoked with the command line argument "foo", the analysis will be
# written to the file "foo/result".
result_file = result

# To help with debugging, lomet can be configured to dump the datasets
# it loads once it's done parsing the metlog files making up the
# dataset. The dump will be written to the same directory as the one
# from which the logs were loaded and will be named "foo.dump", where
# "foo" is the original name of the metlog file.
#
# This setting turns dataset dumping on. By default, it is off.
#dump_dataset = yes

# The metlog files collected as part of the trajectory experiments will
# contain several "tracking speed" entries. Some of these speed entries
# will have negative or small values, indicating brief periods wherein
# the robot was backing up from an obstacle or speeding up to its normal
# forward driving speed.
#
# These negative and small speeds will incorrectly skew the average
# forward driving speed computation. To work around the problem, we
# ignore speed entries below a certain threshold.
#
# This setting specifies the value of the above-mentioned threshold. It
# should be a a floating point number expressed in meters per second.
#
# NOTE: A good way to pick this threshold is to look at the forward
# behaviour's section in the lobot config file used in conjunction with
# the experiments that yielded the dataset being used as the input for
# the lomet program and set this value to something reasonably close to
# but slightly lower than the cruising speed configured there.
#
# Alternatively, we can also peek at the metlogs themselves and decide
# on a suitable figure.
forward_speed_threshold = 0.099
