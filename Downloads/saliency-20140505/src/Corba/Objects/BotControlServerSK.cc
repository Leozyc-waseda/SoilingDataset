// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "BotControlServerSK.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



BotControlServer_ptr BotControlServer_Helper::_nil() {
  return ::BotControlServer::_nil();
}

::CORBA::Boolean BotControlServer_Helper::is_nil(::BotControlServer_ptr p) {
  return ::CORBA::is_nil(p);

}

void BotControlServer_Helper::release(::BotControlServer_ptr p) {
  ::CORBA::release(p);
}

void BotControlServer_Helper::marshalObjRef(::BotControlServer_ptr obj, cdrStream& s) {
  ::BotControlServer::_marshalObjRef(obj, s);
}

BotControlServer_ptr BotControlServer_Helper::unmarshalObjRef(cdrStream& s) {
  return ::BotControlServer::_unmarshalObjRef(s);
}

void BotControlServer_Helper::duplicate(::BotControlServer_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

BotControlServer_ptr
BotControlServer::_duplicate(::BotControlServer_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

BotControlServer_ptr
BotControlServer::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


BotControlServer_ptr
BotControlServer::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

BotControlServer_ptr
BotControlServer::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_BotControlServer _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_BotControlServer* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_BotControlServer;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* BotControlServer::_PD_repoId = "IDL:BotControlServer:1.0";


_objref_BotControlServer::~_objref_BotControlServer() {

}


_objref_BotControlServer::_objref_BotControlServer(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::BotControlServer::_PD_repoId, ior, id, 1)


{
  _PR_setobj(this);
}

void*
_objref_BotControlServer::_ptrToObjRef(const char* id)
{
  if( id == ::BotControlServer::_PD_repoId )
    return (::BotControlServer_ptr) this;

  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::BotControlServer::_PD_repoId) )
    return (::BotControlServer_ptr) this;

  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_53325218d1337e1a_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_53325218d1337e1a_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }





};

// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_10000000(omniCallDescriptor*, omniServant* svnt)
{

  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  impl->init();


}

void _objref_BotControlServer::init()
{
  _0RL_cd_53325218d1337e1a_00000000 _call_desc(_0RL_lcfn_53325218d1337e1a_10000000, "init", 5);


  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cfloat
class _0RL_cd_53325218d1337e1a_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_53325218d1337e1a_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }


  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  ::CORBA::Float result;
};

void _0RL_cd_53325218d1337e1a_20000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_53325218d1337e1a_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Float&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_20000000* tcd = (_0RL_cd_53325218d1337e1a_20000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  tcd->result = impl->getSpeed();


}

::CORBA::Float _objref_BotControlServer::getSpeed()
{
  _0RL_cd_53325218d1337e1a_20000000 _call_desc(_0RL_lcfn_53325218d1337e1a_30000000, "getSpeed", 9);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cshort_i_cfloat
class _0RL_cd_53325218d1337e1a_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_53325218d1337e1a_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }

  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  ::CORBA::Float arg_0;
  ::CORBA::Short result;
};

void _0RL_cd_53325218d1337e1a_40000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_53325218d1337e1a_40000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Float&)arg_0 <<= _n;

}

void _0RL_cd_53325218d1337e1a_40000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_53325218d1337e1a_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Short&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_40000000* tcd = (_0RL_cd_53325218d1337e1a_40000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  tcd->result = impl->setSpeed(tcd->arg_0);


}

::CORBA::Short _objref_BotControlServer::setSpeed(::CORBA::Float speed)
{
  _0RL_cd_53325218d1337e1a_40000000 _call_desc(_0RL_lcfn_53325218d1337e1a_50000000, "setSpeed", 9);
  _call_desc.arg_0 = speed;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_20000000* tcd = (_0RL_cd_53325218d1337e1a_20000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  tcd->result = impl->getSteering();


}

::CORBA::Float _objref_BotControlServer::getSteering()
{
  _0RL_cd_53325218d1337e1a_20000000 _call_desc(_0RL_lcfn_53325218d1337e1a_60000000, "getSteering", 12);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_40000000* tcd = (_0RL_cd_53325218d1337e1a_40000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  tcd->result = impl->setSteering(tcd->arg_0);


}

::CORBA::Short _objref_BotControlServer::setSteering(::CORBA::Float steeringPos)
{
  _0RL_cd_53325218d1337e1a_40000000 _call_desc(_0RL_lcfn_53325218d1337e1a_70000000, "setSteering", 12);
  _call_desc.arg_0 = steeringPos;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cImageOrb_i_cshort
class _0RL_cd_53325218d1337e1a_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_53325218d1337e1a_80000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }

  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  ::CORBA::Short arg_0;
  ImageOrb_var result;
};

void _0RL_cd_53325218d1337e1a_80000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_53325218d1337e1a_80000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Short&)arg_0 <<= _n;

}

void _0RL_cd_53325218d1337e1a_80000000::marshalReturnedValues(cdrStream& _n)
{
  (const ImageOrb&) result >>= _n;

}

void _0RL_cd_53325218d1337e1a_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new ImageOrb;
  (ImageOrb&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_80000000* tcd = (_0RL_cd_53325218d1337e1a_80000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  tcd->result = impl->getImageSensor(tcd->arg_0);


}

ImageOrb* _objref_BotControlServer::getImageSensor(::CORBA::Short i)
{
  _0RL_cd_53325218d1337e1a_80000000 _call_desc(_0RL_lcfn_53325218d1337e1a_90000000, "getImageSensor", 15);
  _call_desc.arg_0 = i;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cshort_o_cshort_i_cshort
class _0RL_cd_53325218d1337e1a_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_53325218d1337e1a_a0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }

  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  ::CORBA::Short arg_0;
  ::CORBA::Short arg_1;
  ::CORBA::Short arg_2;
};

void _0RL_cd_53325218d1337e1a_a0000000::marshalArguments(cdrStream& _n)
{
  arg_2 >>= _n;

}

void _0RL_cd_53325218d1337e1a_a0000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Short&)arg_2 <<= _n;

}

void _0RL_cd_53325218d1337e1a_a0000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_53325218d1337e1a_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Short&)arg_0 <<= _n;
  (::CORBA::Short&)arg_1 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_a0000000* tcd = (_0RL_cd_53325218d1337e1a_a0000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  impl->getImageSensorDims(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_BotControlServer::getImageSensorDims(::CORBA::Short& w, ::CORBA::Short& h, ::CORBA::Short i)
{
  _0RL_cd_53325218d1337e1a_a0000000 _call_desc(_0RL_lcfn_53325218d1337e1a_b0000000, "getImageSensorDims", 19);
  _call_desc.arg_2 = i;

  _invoke(_call_desc);
  w = _call_desc.arg_0;
  h = _call_desc.arg_1;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_cPoint2DOrb_i_cPoint2DOrb
class _0RL_cd_53325218d1337e1a_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_53325218d1337e1a_c0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }

  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);



  ::CORBA::String_var arg_0_;
  const char* arg_0;
  Point2DOrb arg_1_;
  const Point2DOrb* arg_1;
  Point2DOrb arg_2_;
  const Point2DOrb* arg_2;
};

void _0RL_cd_53325218d1337e1a_c0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  (const Point2DOrb&) *arg_1 >>= _n;
  (const Point2DOrb&) *arg_2 >>= _n;

}

void _0RL_cd_53325218d1337e1a_c0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  (Point2DOrb&)arg_1_ <<= _n;
  arg_1 = &arg_1_;
  (Point2DOrb&)arg_2_ <<= _n;
  arg_2 = &arg_2_;

}

// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_c0000000* tcd = (_0RL_cd_53325218d1337e1a_c0000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  impl->setInfo(tcd->arg_0, *tcd->arg_1, *tcd->arg_2);


}

void _objref_BotControlServer::setInfo(const char* info, const Point2DOrb& trackLoc, const Point2DOrb& recLoc)
{
  _0RL_cd_53325218d1337e1a_c0000000 _call_desc(_0RL_lcfn_53325218d1337e1a_d0000000, "setInfo", 8);
  _call_desc.arg_0 = info;
  _call_desc.arg_1 = &(Point2DOrb&) trackLoc;
  _call_desc.arg_2 = &(Point2DOrb&) recLoc;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cshort_o_cPoint2DOrb
class _0RL_cd_53325218d1337e1a_e0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_53325218d1337e1a_e0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }


  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  Point2DOrb arg_0_;
  Point2DOrb* arg_0;
  ::CORBA::Short result;
};

void _0RL_cd_53325218d1337e1a_e0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  (const Point2DOrb&) *arg_0 >>= _n;

}

void _0RL_cd_53325218d1337e1a_e0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Short&)result <<= _n;
  (Point2DOrb&)*arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_53325218d1337e1a_e0000000* tcd = (_0RL_cd_53325218d1337e1a_e0000000*)cd;
  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  tcd->result = impl->getUserInput(*tcd->arg_0);


}

::CORBA::Short _objref_BotControlServer::getUserInput(Point2DOrb& loc)
{
  _0RL_cd_53325218d1337e1a_e0000000 _call_desc(_0RL_lcfn_53325218d1337e1a_f0000000, "getUserInput", 13);
  _call_desc.arg_0 = &(Point2DOrb&) loc;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_53325218d1337e1a_01000000(omniCallDescriptor*, omniServant* svnt)
{

  _impl_BotControlServer* impl = (_impl_BotControlServer*) svnt->_ptrToInterface(BotControlServer::_PD_repoId);
  impl->shutdown();


}

void _objref_BotControlServer::shutdown()
{
  _0RL_cd_53325218d1337e1a_00000000 _call_desc(_0RL_lcfn_53325218d1337e1a_01000000, "shutdown", 9);


  _invoke(_call_desc);



}
_pof_BotControlServer::~_pof_BotControlServer() {}


omniObjRef*
_pof_BotControlServer::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_BotControlServer(ior, id);
}


::CORBA::Boolean
_pof_BotControlServer::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::BotControlServer::_PD_repoId) )
    return 1;

  return 0;
}

const _pof_BotControlServer _the_pof_BotControlServer;

_impl_BotControlServer::~_impl_BotControlServer() {}


::CORBA::Boolean
_impl_BotControlServer::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "init") ) {

    _0RL_cd_53325218d1337e1a_00000000 _call_desc(_0RL_lcfn_53325218d1337e1a_10000000, "init", 5, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSpeed") ) {

    _0RL_cd_53325218d1337e1a_20000000 _call_desc(_0RL_lcfn_53325218d1337e1a_30000000, "getSpeed", 9, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setSpeed") ) {

    _0RL_cd_53325218d1337e1a_40000000 _call_desc(_0RL_lcfn_53325218d1337e1a_50000000, "setSpeed", 9, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSteering") ) {

    _0RL_cd_53325218d1337e1a_20000000 _call_desc(_0RL_lcfn_53325218d1337e1a_60000000, "getSteering", 12, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setSteering") ) {

    _0RL_cd_53325218d1337e1a_40000000 _call_desc(_0RL_lcfn_53325218d1337e1a_70000000, "setSteering", 12, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getImageSensor") ) {

    _0RL_cd_53325218d1337e1a_80000000 _call_desc(_0RL_lcfn_53325218d1337e1a_90000000, "getImageSensor", 15, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getImageSensorDims") ) {

    _0RL_cd_53325218d1337e1a_a0000000 _call_desc(_0RL_lcfn_53325218d1337e1a_b0000000, "getImageSensorDims", 19, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setInfo") ) {

    _0RL_cd_53325218d1337e1a_c0000000 _call_desc(_0RL_lcfn_53325218d1337e1a_d0000000, "setInfo", 8, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getUserInput") ) {

    _0RL_cd_53325218d1337e1a_e0000000 _call_desc(_0RL_lcfn_53325218d1337e1a_f0000000, "getUserInput", 13, 1);
    _call_desc.arg_0 = &_call_desc.arg_0_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "shutdown") ) {

    _0RL_cd_53325218d1337e1a_00000000 _call_desc(_0RL_lcfn_53325218d1337e1a_01000000, "shutdown", 9, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_BotControlServer::_ptrToInterface(const char* id)
{
  if( id == ::BotControlServer::_PD_repoId )
    return (::_impl_BotControlServer*) this;

  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::BotControlServer::_PD_repoId) )
    return (::_impl_BotControlServer*) this;

  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_BotControlServer::_mostDerivedRepoId()
{
  return ::BotControlServer::_PD_repoId;
}

POA_BotControlServer::~POA_BotControlServer() {}

