// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "SalGlasses.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



SalGlasses_ptr SalGlasses_Helper::_nil() {
  return ::SalGlasses::_nil();
}

CORBA::Boolean SalGlasses_Helper::is_nil(::SalGlasses_ptr p) {
  return CORBA::is_nil(p);

}

void SalGlasses_Helper::release(::SalGlasses_ptr p) {
  CORBA::release(p);
}

void SalGlasses_Helper::marshalObjRef(::SalGlasses_ptr obj, cdrStream& s) {
  ::SalGlasses::_marshalObjRef(obj, s);
}

SalGlasses_ptr SalGlasses_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SalGlasses::_unmarshalObjRef(s);
}

void SalGlasses_Helper::duplicate(::SalGlasses_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

SalGlasses_ptr
SalGlasses::_duplicate(::SalGlasses_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

SalGlasses_ptr
SalGlasses::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SalGlasses_ptr
SalGlasses::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SalGlasses_ptr
SalGlasses::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_SalGlasses _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_SalGlasses* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_SalGlasses;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SalGlasses::_PD_repoId = "IDL:SalGlasses:1.0";


_objref_SalGlasses::~_objref_SalGlasses() {

}


_objref_SalGlasses::_objref_SalGlasses(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SalGlasses::_PD_repoId, ior, id, 1)


{
  _PR_setobj(this);
}

void*
_objref_SalGlasses::_ptrToObjRef(const char* id)
{
  if( id == ::SalGlasses::_PD_repoId )
    return (::SalGlasses_ptr) this;

  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::SalGlasses::_PD_repoId) )
    return (::SalGlasses_ptr) this;

  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_9796BC3FD8C2649B_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9796BC3FD8C2649B_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }





};

// Local call call-back function.
static void
_0RL_lcfn_9796BC3FD8C2649B_10000000(omniCallDescriptor* cd, omniServant* svnt)
{

  _impl_SalGlasses* impl = (_impl_SalGlasses*) svnt->_ptrToInterface(SalGlasses::_PD_repoId);
  impl->init();


}

void _objref_SalGlasses::init()
{
  _0RL_cd_9796BC3FD8C2649B_00000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_10000000, "init", 5);


  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cImageOrb_i_cshort
class _0RL_cd_9796BC3FD8C2649B_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9796BC3FD8C2649B_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }

  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  CORBA::Short arg_0;
  ImageOrb_var result;
};

void _0RL_cd_9796BC3FD8C2649B_20000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_9796BC3FD8C2649B_20000000::unmarshalArguments(cdrStream& _n)
{
  (CORBA::Short&)arg_0 <<= _n;

}

void _0RL_cd_9796BC3FD8C2649B_20000000::marshalReturnedValues(cdrStream& _n)
{
  (const ImageOrb&) result >>= _n;

}

void _0RL_cd_9796BC3FD8C2649B_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new ImageOrb;
  (ImageOrb&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_9796BC3FD8C2649B_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9796BC3FD8C2649B_20000000* tcd = (_0RL_cd_9796BC3FD8C2649B_20000000*)cd;
  _impl_SalGlasses* impl = (_impl_SalGlasses*) svnt->_ptrToInterface(SalGlasses::_PD_repoId);
  tcd->result = impl->getImageSensor(tcd->arg_0);


}

ImageOrb* _objref_SalGlasses::getImageSensor(CORBA::Short i)
{
  _0RL_cd_9796BC3FD8C2649B_20000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_30000000, "getImageSensor", 15);
  _call_desc.arg_0 = i;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cshort_o_cshort_i_cshort
class _0RL_cd_9796BC3FD8C2649B_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9796BC3FD8C2649B_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }

  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  CORBA::Short arg_0;
  CORBA::Short arg_1;
  CORBA::Short arg_2;
};

void _0RL_cd_9796BC3FD8C2649B_40000000::marshalArguments(cdrStream& _n)
{
  arg_2 >>= _n;

}

void _0RL_cd_9796BC3FD8C2649B_40000000::unmarshalArguments(cdrStream& _n)
{
  (CORBA::Short&)arg_2 <<= _n;

}

void _0RL_cd_9796BC3FD8C2649B_40000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_9796BC3FD8C2649B_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBA::Short&)arg_0 <<= _n;
  (CORBA::Short&)arg_1 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_9796BC3FD8C2649B_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9796BC3FD8C2649B_40000000* tcd = (_0RL_cd_9796BC3FD8C2649B_40000000*)cd;
  _impl_SalGlasses* impl = (_impl_SalGlasses*) svnt->_ptrToInterface(SalGlasses::_PD_repoId);
  impl->getImageSensorDims(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void _objref_SalGlasses::getImageSensorDims(CORBA::Short& w, CORBA::Short& h, CORBA::Short i)
{
  _0RL_cd_9796BC3FD8C2649B_40000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_50000000, "getImageSensorDims", 19);
  _call_desc.arg_2 = i;

  _invoke(_call_desc);
  w = _call_desc.arg_0;
  h = _call_desc.arg_1;


}
// Local call call-back function.
static void
_0RL_lcfn_9796BC3FD8C2649B_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9796BC3FD8C2649B_20000000* tcd = (_0RL_cd_9796BC3FD8C2649B_20000000*)cd;
  _impl_SalGlasses* impl = (_impl_SalGlasses*) svnt->_ptrToInterface(SalGlasses::_PD_repoId);
  tcd->result = impl->getSaliencyMap(tcd->arg_0);


}

ImageOrb* _objref_SalGlasses::getSaliencyMap(CORBA::Short i)
{
  _0RL_cd_9796BC3FD8C2649B_20000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_60000000, "getSaliencyMap", 15);
  _call_desc.arg_0 = i;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  void_o_cshort_o_cshort
class _0RL_cd_9796BC3FD8C2649B_70000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9796BC3FD8C2649B_70000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }


  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  CORBA::Short arg_0;
  CORBA::Short arg_1;
};

void _0RL_cd_9796BC3FD8C2649B_70000000::marshalReturnedValues(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_9796BC3FD8C2649B_70000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBA::Short&)arg_0 <<= _n;
  (CORBA::Short&)arg_1 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_9796BC3FD8C2649B_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9796BC3FD8C2649B_70000000* tcd = (_0RL_cd_9796BC3FD8C2649B_70000000*)cd;
  _impl_SalGlasses* impl = (_impl_SalGlasses*) svnt->_ptrToInterface(SalGlasses::_PD_repoId);
  impl->getWinner(tcd->arg_0, tcd->arg_1);


}

void _objref_SalGlasses::getWinner(CORBA::Short& x, CORBA::Short& y)
{
  _0RL_cd_9796BC3FD8C2649B_70000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_80000000, "getWinner", 10);


  _invoke(_call_desc);
  x = _call_desc.arg_0;
  y = _call_desc.arg_1;


}
// Proxy call descriptor class. Mangled signature:
//  _cshort_i_cshort
class _0RL_cd_9796BC3FD8C2649B_90000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9796BC3FD8C2649B_90000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {

  }

  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);


  CORBA::Short arg_0;
  CORBA::Short result;
};

void _0RL_cd_9796BC3FD8C2649B_90000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_9796BC3FD8C2649B_90000000::unmarshalArguments(cdrStream& _n)
{
  (CORBA::Short&)arg_0 <<= _n;

}

void _0RL_cd_9796BC3FD8C2649B_90000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_9796BC3FD8C2649B_90000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBA::Short&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_9796BC3FD8C2649B_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9796BC3FD8C2649B_90000000* tcd = (_0RL_cd_9796BC3FD8C2649B_90000000*)cd;
  _impl_SalGlasses* impl = (_impl_SalGlasses*) svnt->_ptrToInterface(SalGlasses::_PD_repoId);
  tcd->result = impl->getSensorValue(tcd->arg_0);


}

CORBA::Short _objref_SalGlasses::getSensorValue(CORBA::Short i)
{
  _0RL_cd_9796BC3FD8C2649B_90000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_a0000000, "getSensorValue", 15);
  _call_desc.arg_0 = i;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_9796BC3FD8C2649B_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{

  _impl_SalGlasses* impl = (_impl_SalGlasses*) svnt->_ptrToInterface(SalGlasses::_PD_repoId);
  impl->shutdown();


}

void _objref_SalGlasses::shutdown()
{
  _0RL_cd_9796BC3FD8C2649B_00000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_b0000000, "shutdown", 9);


  _invoke(_call_desc);



}
_pof_SalGlasses::~_pof_SalGlasses() {}


omniObjRef*
_pof_SalGlasses::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_SalGlasses(ior, id);
}


CORBA::Boolean
_pof_SalGlasses::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::SalGlasses::_PD_repoId) )
    return 1;

  return 0;
}

const _pof_SalGlasses _the_pof_SalGlasses;

_impl_SalGlasses::~_impl_SalGlasses() {}


CORBA::Boolean
_impl_SalGlasses::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "init") ) {

    _0RL_cd_9796BC3FD8C2649B_00000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_10000000, "init", 5, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getImageSensor") ) {

    _0RL_cd_9796BC3FD8C2649B_20000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_30000000, "getImageSensor", 15, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getImageSensorDims") ) {

    _0RL_cd_9796BC3FD8C2649B_40000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_50000000, "getImageSensorDims", 19, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSaliencyMap") ) {

    _0RL_cd_9796BC3FD8C2649B_20000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_60000000, "getSaliencyMap", 15, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getWinner") ) {

    _0RL_cd_9796BC3FD8C2649B_70000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_80000000, "getWinner", 10, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSensorValue") ) {

    _0RL_cd_9796BC3FD8C2649B_90000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_a0000000, "getSensorValue", 15, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "shutdown") ) {

    _0RL_cd_9796BC3FD8C2649B_00000000 _call_desc(_0RL_lcfn_9796BC3FD8C2649B_b0000000, "shutdown", 9, 1);

    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_SalGlasses::_ptrToInterface(const char* id)
{
  if( id == ::SalGlasses::_PD_repoId )
    return (::_impl_SalGlasses*) this;

  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::SalGlasses::_PD_repoId) )
    return (::_impl_SalGlasses*) this;

  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_SalGlasses::_mostDerivedRepoId()
{
  return ::SalGlasses::_PD_repoId;
}

POA_SalGlasses::~POA_SalGlasses() {}

