#!/usr/bin/perl 

# Auto generated by linear_classify_build_process_rsvp.m 
# Created: 07-Jun-2009 : 20.42.33.5942
# Do not edit this file directly 

$condition 	= "UIOLTXE_basic"; 
$fdur 		= "50ms"; 
$redir 		= ">/dev/null 2>&1"; 

foreach $d (@ARGV) 
{
	@x = split(/\//, $d); 
	$fbase = pop(@x); 

	# Clean each file before running since ezvision will append 
	$command = "rm -f $d/chan*txt"; 
	system($command); 

	# For each stim sequence call ezvision with this way 
	$command = "/lab/mundhenk/saliency/bin/ezvision ". 
	"--movie --ior-type=None --agm-type=Std ". 
	"--surprise --vc-chans=IOLTXE ". 
	"--nouse-random --display-foa --ior-type=None ". 
	"--sm-type=Trivial --wta-type=None ". 
	"--in=$d/$d_${fbase}_#.png --input-frames=0-MAX\@$fdur ". 
	"--output-frames=0-MAX\@$fdur ". 
	"--out=png:$d/stim ". 
	"--sv-type=Stats --sv-stats-fname=$d/stats.txt --save-channel-stats ". 
	"--save-channel-stats-name=$d/chan.txt ". 
	"--save-channel-stats-tag=$d_${fbase} --save-stats-per-channel ". 
	"--save-ag --ag-type=Std --savestats-ag --ag-statsfile=ag.stats.txt --ag-tframe=0 --ag-maskfile=$d/mask.png ". 
	"$redir"; 

	# Make a record of each command called, lock the log while doing this 
	open(LOGFILE, ">>/lab/mundhenk/linear-classifier/log/process_rsvp.log.txt"); 
	flock LOGFILE, 2; 
	print(LOGFILE "RUNNING $command\n\n"); 
	close(LOGFILE); 
	flock LOGFILE, 8; 

	#Run the actual command 
	system($command); 
}